---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/api/categories":
    post:
      summary: Creates a category
      tags:
      - Categories
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: category created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - category
    get:
      summary: Retrieves all categories
      tags:
      - Categories
      responses:
        '200':
          description: categories found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
  "/api/categories/{id}":
    put:
      summary: Updates a category
      tags:
      - Categories
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: category updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: object
                  properties:
                    name:
                      type: string
                  required:
                  - name
              required:
              - category
    delete:
      summary: Deletes a category
      tags:
      - Categories
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: category deleted
    get:
      summary: Retrieves a category
      tags:
      - Categories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: category found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
  "/api/categories/1/sub_categories/1/drawers":
    get:
      summary: Retrieves all drawers
      tags:
      - Drawers
      responses:
        '200':
          description: drawers found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
  "/api/categories/1/sub_categories/1/drawers/{id}":
    get:
      summary: Retrieves a drawer
      tags:
      - Drawers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: drawer found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
  "/api/posts":
    get:
      summary: Retrieves all posts
      tags:
      - Posts
      responses:
        '200':
          description: posts found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string
                    image:
                      type: string
                    drawer_id:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    user_id:
                      type: integer
                    slug:
                      type: string
                    category_id:
                      type: integer
                    sub_category_id:
                      type: integer
                    user:
                      type: object
                    comments:
                      type: array
                    boxes:
                      type: array
                    key_features:
                      type: array
                    specifications:
                      type: array
                    drawer:
                      type: object
                    category:
                      type: object
                    sub_category:
                      type: object
                  required:
                  - id
                  - title
                  - content
                  - image
                  - drawer_id
                  - created_at
                  - updated_at
                  - user_id
                  - slug
                  - category_id
                  - sub_category_id
                  - user
                  - comments
                  - boxes
                  - key_features
                  - specifications
                  - drawer
                  - category
                  - sub_category
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                required:
                - errors
  "/api/posts/{id}":
    get:
      summary: Retrieves a post
      tags:
      - Posts
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: post found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                  image:
                    type: string
                  drawer_id:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  user_id:
                    type: integer
                  slug:
                    type: string
                  category_id:
                    type: integer
                  sub_category_id:
                    type: integer
                  user:
                    type: object
                  comments:
                    type: array
                  boxes:
                    type: array
                  key_features:
                    type: array
                  specifications:
                    type: array
                  drawer:
                    type: object
                  category:
                    type: object
                  sub_category:
                    type: object
                required:
                - id
                - title
                - content
                - image
                - drawer_id
                - created_at
                - updated_at
                - user_id
                - slug
                - category_id
                - sub_category_id
                - user
                - comments
                - boxes
                - key_features
                - specifications
                - drawer
                - category
                - sub_category
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                required:
                - errors
        '404':
          description: post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                required:
                - errors
  "/api/posts/1/specifications":
    get:
      summary: Retrieves all specifications
      tags:
      - Specifications
      responses:
        '200':
          description: specifications found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    post_id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string
                    created_at:
                      type: string
                    updated_at:
                      type: string
                    post:
                      type: object
                    specification_items:
                      type: array
                  required:
                  - id
                  - post_id
                  - title
                  - content
                  - created_at
                  - updated_at
                  - post
                  - specification_items
        '401':
          description: unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                required:
                - errors
  "/api/categories/1/sub_categories":
    post:
      summary: Creates a sub_category
      tags:
      - SubCategories
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: sub_category created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category_id:
                  type: integer
              required:
              - name
              - category_id
    get:
      summary: Retrieves all sub_categories
      tags:
      - SubCategories
      responses:
        '200':
          description: sub_categories found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    category_id:
                      type: integer
                    created_at:
                      type: string
                    updated_at:
                      type: string
  "/api/categories/1/sub_categories/1":
    put:
      summary: Updates a sub_category
      tags:
      - SubCategories
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '204':
          description: sub_category updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category_id:
                  type: integer
              required:
              - name
              - category_id
    delete:
      summary: Deletes a sub_category
      tags:
      - SubCategories
      security:
      - bearer_auth: []
      responses:
        '204':
          description: sub_category deleted
  "/api/categories/1/sub_categories/{id}":
    get:
      summary: Retrieves a sub_category
      tags:
      - SubCategories
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: sub_category found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  category_id:
                    type: integer
                  created_at:
                    type: string
                  updated_at:
                    type: string
  "/api/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
              required:
              - user
  "/api/users/login":
    post:
      summary: Logs in a user
      tags:
      - Users
      parameters: []
      responses:
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
